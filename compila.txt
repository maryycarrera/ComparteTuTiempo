Estas instrucciones están copiadas y adaptadas del archivo README del código fuente. Se recomienda consultar dicho archivo para visualizar mejor el contenido. No obstante, se pueden seguir los pasos perfectamente leyendo el presente documento .txt.

Hay dos opciones para ejecutar el proyecto en desarrollo: desde el código fuente o usando Docker. Estas opciones están explicadas en el primer y segundo apartado de este documento, respectivamente.

## Descargar y ejecutar el proyecto para desarrollo

> [!WARNING]
> Se necesita tener instalados Java, Node.js y MariaDB en las versiones indicadas a continuación. También se pueden utilizar versiones superiores de estas tecnologías, pero es recomendable usar las mismas con las que se ha desarrollado este proyecto.
> Java 21.0.8
> Node.js 22.18.0
> MariaDB 11.7.2

### Base de Datos (MariaDB)

Para configurar la base de datos **MariaDB/MySQL**:
- Abre una terminal y accede a MariaDB como root:
    mysql -u root -p
- Crea la base de datos:
    CREATE DATABASE compartetutiempo;
- Crea el usuario y asigna permisos:
    CREATE USER 'compartetutiempo'@'localhost' IDENTIFIED BY 'compartetutiempo';
    GRANT ALL PRIVILEGES ON compartetutiempo.* TO 'compartetutiempo'@'localhost';
    FLUSH PRIVILEGES;
    EXIT;
- Ajusta los valores en `src/main/resources/application.properties` si usas otros datos.

### Backend (Spring Boot)

Para instalar las dependencias y ejecutar el backend, en la misma o en otra terminal escribe:
.\mvnw spring-boot:run

El backend estará disponible en http://localhost:8080.

### Frontend (Angular)

En otra terminal:

1. **Instala las dependencias:**
    cd frontend
    npm install
2. **Ejecuta la aplicación:**
    npm start

El frontend de la aplicación estará disponible en http://localhost:4200.

---

## Usar Docker para desarrollo

Antes de comenzar, asegúrate de tener instalado en tu sistema:
- [Docker](https://docs.docker.com/get-docker/)
- [Docker Compose](https://docs.docker.com/compose/install/)

> [!NOTE]
> Si instalas Docker Desktop, Docker Compose ya vendrá instalado por defecto. Asegúrate de que la _engine_ esté ejecutándose antes de continuar.

Una vez instalado Docker, puedes seguir estos pasos:
1. Asegúrate de tener el archivo `docker-compose.yml` en la raíz del proyecto.
2. Abre una terminal en la ruta donde está el archivo `docker-compose.yml`.
3. Ejecuta el siguiente comando:
   docker compose up -d
   
   O, si prefieres ver los logs:
   docker compose up

Esto construirá y levantará los servicios usando el código fuente local:
- Backend: se construye desde el Dockerfile del proyecto.
- Frontend: se construye desde el Dockerfile en la carpeta `frontend`.
- Base de datos: usa la imagen `mariadb:11.7.2`.

La aplicación estará disponible en:
- Backend: http://localhost:8080
- Frontend: http://localhost

Para detener los contenedores:
docker compose down

Si prefieres detener y eliminar también los volúmenes:
docker compose down -v

---

## Credenciales de ComparteTuTiempo

Las credenciales de los usuarios base de ComparteTuTiempo son las siguientes:

| usuario           | contraseña  |
| - | - |
| **Administrador** |
| admin1            | Sys4dm1n*!  |
| admin2            | Sys4dm1n*!  |
| admin3            | Sys4dm1n*!  |
| admin4            | Sys4dm1n*!  |
| **Miembro**       |
| member1           | m13mbr0CTT* |
| member2           | m13mbr0CTT* |
| member3           | m13mbr0CTT* |
| member4           | m13mbr0CTT* |
| member5           | m13mbr0CTT* |
| member6           | m13mbr0CTT* |
| member7           | m13mbr0CTT* |
| member8           | m13mbr0CTT* |
| member9           | m13mbr0CTT* |
| member10          | m13mbr0CTT* |
| maryycarrera      | m13mbr0CTT* |